#include "battlesnake/rules/wrapped_ruleset.h"

#include <limits>
#include <ostream>

namespace battlesnake {
namespace rules {

namespace {

// Ordered list of hazard positions with the first hazard at {0,0}.
static constexpr Point kHazardList[] = {
    {0, 0},     {0, 1},     {1, 1},     {1, 0},     {1, -1},    {0, -1},
    {-1, -1},   {-1, 0},    {-1, 1},    {-1, 2},    {0, 2},     {1, 2},
    {2, 2},     {2, 1},     {2, 0},     {2, -1},    {2, -2},    {1, -2},
    {0, -2},    {-1, -2},   {-2, -2},   {-2, -1},   {-2, 0},    {-2, 1},
    {-2, 2},    {-2, 3},    {-1, 3},    {0, 3},     {1, 3},     {2, 3},
    {3, 3},     {3, 2},     {3, 1},     {3, 0},     {3, -1},    {3, -2},
    {3, -3},    {2, -3},    {1, -3},    {0, -3},    {-1, -3},   {-2, -3},
    {-3, -3},   {-3, -2},   {-3, -1},   {-3, 0},    {-3, 1},    {-3, 2},
    {-3, 3},    {-3, 4},    {-2, 4},    {-1, 4},    {0, 4},     {1, 4},
    {2, 4},     {3, 4},     {4, 4},     {4, 3},     {4, 2},     {4, 1},
    {4, 0},     {4, -1},    {4, -2},    {4, -3},    {4, -4},    {3, -4},
    {2, -4},    {1, -4},    {0, -4},    {-1, -4},   {-2, -4},   {-3, -4},
    {-4, -4},   {-4, -3},   {-4, -2},   {-4, -1},   {-4, 0},    {-4, 1},
    {-4, 2},    {-4, 3},    {-4, 4},    {-4, 5},    {-3, 5},    {-2, 5},
    {-1, 5},    {0, 5},     {1, 5},     {2, 5},     {3, 5},     {4, 5},
    {5, 5},     {5, 4},     {5, 3},     {5, 2},     {5, 1},     {5, 0},
    {5, -1},    {5, -2},    {5, -3},    {5, -4},    {5, -5},    {4, -5},
    {3, -5},    {2, -5},    {1, -5},    {0, -5},    {-1, -5},   {-2, -5},
    {-3, -5},   {-4, -5},   {-5, -5},   {-5, -4},   {-5, -3},   {-5, -2},
    {-5, -1},   {-5, 0},    {-5, 1},    {-5, 2},    {-5, 3},    {-5, 4},
    {-5, 5},    {-5, 6},    {-4, 6},    {-3, 6},    {-2, 6},    {-1, 6},
    {0, 6},     {1, 6},     {2, 6},     {3, 6},     {4, 6},     {5, 6},
    {6, 6},     {6, 5},     {6, 4},     {6, 3},     {6, 2},     {6, 1},
    {6, 0},     {6, -1},    {6, -2},    {6, -3},    {6, -4},    {6, -5},
    {6, -6},    {5, -6},    {4, -6},    {3, -6},    {2, -6},    {1, -6},
    {0, -6},    {-1, -6},   {-2, -6},   {-3, -6},   {-4, -6},   {-5, -6},
    {-6, -6},   {-6, -5},   {-6, -4},   {-6, -3},   {-6, -2},   {-6, -1},
    {-6, 0},    {-6, 1},    {-6, 2},    {-6, 3},    {-6, 4},    {-6, 5},
    {-6, 6},    {-6, 7},    {-5, 7},    {-4, 7},    {-3, 7},    {-2, 7},
    {-1, 7},    {0, 7},     {1, 7},     {2, 7},     {3, 7},     {4, 7},
    {5, 7},     {6, 7},     {7, 7},     {7, 6},     {7, 5},     {7, 4},
    {7, 3},     {7, 2},     {7, 1},     {7, 0},     {7, -1},    {7, -2},
    {7, -3},    {7, -4},    {7, -5},    {7, -6},    {7, -7},    {6, -7},
    {5, -7},    {4, -7},    {3, -7},    {2, -7},    {1, -7},    {0, -7},
    {-1, -7},   {-2, -7},   {-3, -7},   {-4, -7},   {-5, -7},   {-6, -7},
    {-7, -7},   {-7, -6},   {-7, -5},   {-7, -4},   {-7, -3},   {-7, -2},
    {-7, -1},   {-7, 0},    {-7, 1},    {-7, 2},    {-7, 3},    {-7, 4},
    {-7, 5},    {-7, 6},    {-7, 7},    {-7, 8},    {-6, 8},    {-5, 8},
    {-4, 8},    {-3, 8},    {-2, 8},    {-1, 8},    {0, 8},     {1, 8},
    {2, 8},     {3, 8},     {4, 8},     {5, 8},     {6, 8},     {7, 8},
    {8, 8},     {8, 7},     {8, 6},     {8, 5},     {8, 4},     {8, 3},
    {8, 2},     {8, 1},     {8, 0},     {8, -1},    {8, -2},    {8, -3},
    {8, -4},    {8, -5},    {8, -6},    {8, -7},    {8, -8},    {7, -8},
    {6, -8},    {5, -8},    {4, -8},    {3, -8},    {2, -8},    {1, -8},
    {0, -8},    {-1, -8},   {-2, -8},   {-3, -8},   {-4, -8},   {-5, -8},
    {-6, -8},   {-7, -8},   {-8, -8},   {-8, -7},   {-8, -6},   {-8, -5},
    {-8, -4},   {-8, -3},   {-8, -2},   {-8, -1},   {-8, 0},    {-8, 1},
    {-8, 2},    {-8, 3},    {-8, 4},    {-8, 5},    {-8, 6},    {-8, 7},
    {-8, 8},    {-8, 9},    {-7, 9},    {-6, 9},    {-5, 9},    {-4, 9},
    {-3, 9},    {-2, 9},    {-1, 9},    {0, 9},     {1, 9},     {2, 9},
    {3, 9},     {4, 9},     {5, 9},     {6, 9},     {7, 9},     {8, 9},
    {9, 9},     {9, 8},     {9, 7},     {9, 6},     {9, 5},     {9, 4},
    {9, 3},     {9, 2},     {9, 1},     {9, 0},     {9, -1},    {9, -2},
    {9, -3},    {9, -4},    {9, -5},    {9, -6},    {9, -7},    {9, -8},
    {9, -9},    {8, -9},    {7, -9},    {6, -9},    {5, -9},    {4, -9},
    {3, -9},    {2, -9},    {1, -9},    {0, -9},    {-1, -9},   {-2, -9},
    {-3, -9},   {-4, -9},   {-5, -9},   {-6, -9},   {-7, -9},   {-8, -9},
    {-9, -9},   {-9, -8},   {-9, -7},   {-9, -6},   {-9, -5},   {-9, -4},
    {-9, -3},   {-9, -2},   {-9, -1},   {-9, 0},    {-9, 1},    {-9, 2},
    {-9, 3},    {-9, 4},    {-9, 5},    {-9, 6},    {-9, 7},    {-9, 8},
    {-9, 9},    {-9, 10},   {-8, 10},   {-7, 10},   {-6, 10},   {-5, 10},
    {-4, 10},   {-3, 10},   {-2, 10},   {-1, 10},   {0, 10},    {1, 10},
    {2, 10},    {3, 10},    {4, 10},    {5, 10},    {6, 10},    {7, 10},
    {8, 10},    {9, 10},    {10, 10},   {10, 9},    {10, 8},    {10, 7},
    {10, 6},    {10, 5},    {10, 4},    {10, 3},    {10, 2},    {10, 1},
    {10, 0},    {10, -1},   {10, -2},   {10, -3},   {10, -4},   {10, -5},
    {10, -6},   {10, -7},   {10, -8},   {10, -9},   {10, -10},  {9, -10},
    {8, -10},   {7, -10},   {6, -10},   {5, -10},   {4, -10},   {3, -10},
    {2, -10},   {1, -10},   {0, -10},   {-1, -10},  {-2, -10},  {-3, -10},
    {-4, -10},  {-5, -10},  {-6, -10},  {-7, -10},  {-8, -10},  {-9, -10},
    {-10, -10}, {-10, -9},  {-10, -8},  {-10, -7},  {-10, -6},  {-10, -5},
    {-10, -4},  {-10, -3},  {-10, -2},  {-10, -1},  {-10, 0},   {-10, 1},
    {-10, 2},   {-10, 3},   {-10, 4},   {-10, 5},   {-10, 6},   {-10, 7},
    {-10, 8},   {-10, 9},   {-10, 10},  {-10, 11},  {-9, 11},   {-8, 11},
    {-7, 11},   {-6, 11},   {-5, 11},   {-4, 11},   {-3, 11},   {-2, 11},
    {-1, 11},   {0, 11},    {1, 11},    {2, 11},    {3, 11},    {4, 11},
    {5, 11},    {6, 11},    {7, 11},    {8, 11},    {9, 11},    {10, 11},
    {11, 11},   {11, 10},   {11, 9},    {11, 8},    {11, 7},    {11, 6},
    {11, 5},    {11, 4},    {11, 3},    {11, 2},    {11, 1},    {11, 0},
    {11, -1},   {11, -2},   {11, -3},   {11, -4},   {11, -5},   {11, -6},
    {11, -7},   {11, -8},   {11, -9},   {11, -10},  {11, -11},  {10, -11},
    {9, -11},   {8, -11},   {7, -11},   {6, -11},   {5, -11},   {4, -11},
    {3, -11},   {2, -11},   {1, -11},   {0, -11},   {-1, -11},  {-2, -11},
    {-3, -11},  {-4, -11},  {-5, -11},  {-6, -11},  {-7, -11},  {-8, -11},
    {-9, -11},  {-10, -11}, {-11, -11}, {-11, -10}, {-11, -9},  {-11, -8},
    {-11, -7},  {-11, -6},  {-11, -5},  {-11, -4},  {-11, -3},  {-11, -2},
    {-11, -1},  {-11, 0},   {-11, 1},   {-11, 2},   {-11, 3},   {-11, 4},
    {-11, 5},   {-11, 6},   {-11, 7},   {-11, 8},   {-11, 9},   {-11, 10},
    {-11, 11},  {-11, 12},  {-10, 12},  {-9, 12},   {-8, 12},   {-7, 12},
    {-6, 12},   {-5, 12},   {-4, 12},   {-3, 12},   {-2, 12},   {-1, 12},
    {0, 12},    {1, 12},    {2, 12},    {3, 12},    {4, 12},    {5, 12},
    {6, 12},    {7, 12},    {8, 12},    {9, 12},    {10, 12},   {11, 12},
    {12, 12},   {12, 11},   {12, 10},   {12, 9},    {12, 8},    {12, 7},
    {12, 6},    {12, 5},    {12, 4},    {12, 3},    {12, 2},    {12, 1},
    {12, 0},    {12, -1},   {12, -2},   {12, -3},   {12, -4},   {12, -5},
    {12, -6},   {12, -7},   {12, -8},   {12, -9},   {12, -10},  {12, -11},
    {12, -12},  {11, -12},  {10, -12},  {9, -12},   {8, -12},   {7, -12},
    {6, -12},   {5, -12},   {4, -12},   {3, -12},   {2, -12},   {1, -12},
    {0, -12},   {-1, -12},  {-2, -12},  {-3, -12},  {-4, -12},  {-5, -12},
    {-6, -12},  {-7, -12},  {-8, -12},  {-9, -12},  {-10, -12}, {-11, -12},
    {-12, -12}, {-12, -11}, {-12, -10}, {-12, -9},  {-12, -8},  {-12, -7},
    {-12, -6},  {-12, -5},  {-12, -4},  {-12, -3},  {-12, -2},  {-12, -1},
    {-12, 0},   {-12, 1},   {-12, 2},   {-12, 3},   {-12, 4},   {-12, 5},
    {-12, 6},   {-12, 7},   {-12, 8},   {-12, 9},   {-12, 10},  {-12, 11},
    {-12, 12},  {-12, 13},  {-11, 13},  {-10, 13},  {-9, 13},   {-8, 13},
    {-7, 13},   {-6, 13},   {-5, 13},   {-4, 13},   {-3, 13},   {-2, 13},
    {-1, 13},   {0, 13},    {1, 13},    {2, 13},    {3, 13},    {4, 13},
    {5, 13},    {6, 13},    {7, 13},    {8, 13},    {9, 13},    {10, 13},
    {11, 13},   {12, 13},   {13, 13},   {13, 12},   {13, 11},   {13, 10},
    {13, 9},    {13, 8},    {13, 7},    {13, 6},    {13, 5},    {13, 4},
    {13, 3},    {13, 2},    {13, 1},    {13, 0},    {13, -1},   {13, -2},
    {13, -3},   {13, -4},   {13, -5},   {13, -6},   {13, -7},   {13, -8},
    {13, -9},   {13, -10},  {13, -11},  {13, -12},  {13, -13},  {12, -13},
    {11, -13},  {10, -13},  {9, -13},   {8, -13},   {7, -13},   {6, -13},
    {5, -13},   {4, -13},   {3, -13},   {2, -13},   {1, -13},   {0, -13},
    {-1, -13},  {-2, -13},  {-3, -13},  {-4, -13},  {-5, -13},  {-6, -13},
    {-7, -13},  {-8, -13},  {-9, -13},  {-10, -13}, {-11, -13}, {-12, -13},
    {-13, -13}, {-13, -12}, {-13, -11}, {-13, -10}, {-13, -9},  {-13, -8},
    {-13, -7},  {-13, -6},  {-13, -5},  {-13, -4},  {-13, -3},  {-13, -2},
    {-13, -1},  {-13, 0},   {-13, 1},   {-13, 2},   {-13, 3},   {-13, 4},
    {-13, 5},   {-13, 6},   {-13, 7},   {-13, 8},   {-13, 9},   {-13, 10},
    {-13, 11},  {-13, 12},  {-13, 13},  {-13, 14},  {-12, 14},  {-11, 14},
    {-10, 14},  {-9, 14},   {-8, 14},   {-7, 14},   {-6, 14},   {-5, 14},
    {-4, 14},   {-3, 14},   {-2, 14},   {-1, 14},   {0, 14},    {1, 14},
    {2, 14},    {3, 14},    {4, 14},    {5, 14},    {6, 14},    {7, 14},
    {8, 14},    {9, 14},    {10, 14},   {11, 14},   {12, 14},   {13, 14},
    {14, 14},   {14, 13},   {14, 12},   {14, 11},   {14, 10},   {14, 9},
    {14, 8},    {14, 7},    {14, 6},    {14, 5},    {14, 4},    {14, 3},
    {14, 2},    {14, 1},    {14, 0},    {14, -1},   {14, -2},   {14, -3},
    {14, -4},   {14, -5},   {14, -6},   {14, -7},   {14, -8},   {14, -9},
    {14, -10},  {14, -11},  {14, -12},  {14, -13},  {14, -14},  {13, -14},
    {12, -14},  {11, -14},  {10, -14},  {9, -14},   {8, -14},   {7, -14},
    {6, -14},   {5, -14},   {4, -14},   {3, -14},   {2, -14},   {1, -14},
    {0, -14},   {-1, -14},  {-2, -14},  {-3, -14},  {-4, -14},  {-5, -14},
    {-6, -14},  {-7, -14},  {-8, -14},  {-9, -14},  {-10, -14}, {-11, -14},
    {-12, -14}, {-13, -14}, {-14, -14}, {-14, -13}, {-14, -12}, {-14, -11},
    {-14, -10}, {-14, -9},  {-14, -8},  {-14, -7},  {-14, -6},  {-14, -5},
    {-14, -4},  {-14, -3},  {-14, -2},  {-14, -1},  {-14, 0},   {-14, 1},
    {-14, 2},   {-14, 3},   {-14, 4},   {-14, 5},   {-14, 6},   {-14, 7},
    {-14, 8},   {-14, 9},   {-14, 10},  {-14, 11},  {-14, 12},  {-14, 13},
    {-14, 14},  {-14, 15},  {-13, 15},  {-12, 15},  {-11, 15},  {-10, 15},
    {-9, 15},   {-8, 15},   {-7, 15},   {-6, 15},   {-5, 15},   {-4, 15},
    {-3, 15},   {-2, 15},   {-1, 15},   {0, 15},    {1, 15},    {2, 15},
    {3, 15},    {4, 15},    {5, 15},    {6, 15},    {7, 15},    {8, 15},
    {9, 15},    {10, 15},   {11, 15},   {12, 15},   {13, 15},   {14, 15},
    {15, 15},   {15, 14},   {15, 13},   {15, 12},   {15, 11},   {15, 10},
    {15, 9},    {15, 8},    {15, 7},    {15, 6},    {15, 5},    {15, 4},
    {15, 3},    {15, 2},    {15, 1},    {15, 0},    {15, -1},   {15, -2},
    {15, -3},   {15, -4},   {15, -5},   {15, -6},   {15, -7},   {15, -8},
    {15, -9},   {15, -10},  {15, -11},  {15, -12},  {15, -13},  {15, -14},
    {15, -15},  {14, -15},  {13, -15},  {12, -15},  {11, -15},  {10, -15},
    {9, -15},   {8, -15},   {7, -15},   {6, -15},   {5, -15},   {4, -15},
    {3, -15},   {2, -15},   {1, -15},   {0, -15},   {-1, -15},  {-2, -15},
    {-3, -15},  {-4, -15},  {-5, -15},  {-6, -15},  {-7, -15},  {-8, -15},
    {-9, -15},  {-10, -15}, {-11, -15}, {-12, -15}, {-13, -15}, {-14, -15},
    {-15, -15}, {-15, -14}, {-15, -13}, {-15, -12}, {-15, -11}, {-15, -10},
    {-15, -9},  {-15, -8},  {-15, -7},  {-15, -6},  {-15, -5},  {-15, -4},
    {-15, -3},  {-15, -2},  {-15, -1},  {-15, 0},   {-15, 1},   {-15, 2},
    {-15, 3},   {-15, 4},   {-15, 5},   {-15, 6},   {-15, 7},   {-15, 8},
    {-15, 9},   {-15, 10},  {-15, 11},  {-15, 12},  {-15, 13},  {-15, 14},
    {-15, 15},  {-15, 16},  {-14, 16},  {-13, 16},  {-12, 16},  {-11, 16},
    {-10, 16},  {-9, 16},   {-8, 16},   {-7, 16},   {-6, 16},   {-5, 16},
    {-4, 16},   {-3, 16},   {-2, 16},   {-1, 16},   {0, 16},    {1, 16},
    {2, 16},    {3, 16},    {4, 16},    {5, 16},    {6, 16},    {7, 16},
    {8, 16},    {9, 16},    {10, 16},   {11, 16},   {12, 16},   {13, 16},
    {14, 16},   {15, 16},   {16, 16},   {16, 15},   {16, 14},   {16, 13},
    {16, 12},   {16, 11},   {16, 10},   {16, 9},    {16, 8},    {16, 7},
    {16, 6},    {16, 5},    {16, 4},    {16, 3},    {16, 2},    {16, 1},
    {16, 0},    {16, -1},   {16, -2},   {16, -3},   {16, -4},   {16, -5},
    {16, -6},   {16, -7},   {16, -8},   {16, -9},   {16, -10},  {16, -11},
    {16, -12},  {16, -13},  {16, -14},  {16, -15},  {16, -16},  {15, -16},
    {14, -16},  {13, -16},  {12, -16},  {11, -16},  {10, -16},  {9, -16},
    {8, -16},   {7, -16},   {6, -16},   {5, -16},   {4, -16},   {3, -16},
    {2, -16},   {1, -16},   {0, -16},   {-1, -16},  {-2, -16},  {-3, -16},
    {-4, -16},  {-5, -16},  {-6, -16},  {-7, -16},  {-8, -16},  {-9, -16},
    {-10, -16}, {-11, -16}, {-12, -16}, {-13, -16}, {-14, -16}, {-15, -16},
    {-16, -16}, {-16, -15}, {-16, -14}, {-16, -13}, {-16, -12}, {-16, -11},
    {-16, -10}, {-16, -9},  {-16, -8},  {-16, -7},  {-16, -6},  {-16, -5},
    {-16, -4},  {-16, -3},  {-16, -2},  {-16, -1},  {-16, 0},   {-16, 1},
    {-16, 2},   {-16, 3},   {-16, 4},   {-16, 5},   {-16, 6},   {-16, 7},
    {-16, 8},   {-16, 9},   {-16, 10},  {-16, 11},  {-16, 12},  {-16, 13},
    {-16, 14},  {-16, 15},  {-16, 16},  {-16, 17},  {-15, 17},  {-14, 17},
    {-13, 17},  {-12, 17},  {-11, 17},  {-10, 17},  {-9, 17},   {-8, 17},
    {-7, 17},   {-6, 17},   {-5, 17},   {-4, 17},   {-3, 17},   {-2, 17},
    {-1, 17},   {0, 17},    {1, 17},    {2, 17},    {3, 17},    {4, 17},
    {5, 17},    {6, 17},    {7, 17},    {8, 17},    {9, 17},    {10, 17},
    {11, 17},   {12, 17},   {13, 17},   {14, 17},   {15, 17},   {16, 17},
    {17, 17},   {17, 16},   {17, 15},   {17, 14},   {17, 13},   {17, 12},
    {17, 11},   {17, 10},   {17, 9},    {17, 8},    {17, 7},    {17, 6},
    {17, 5},    {17, 4},    {17, 3},    {17, 2},    {17, 1},    {17, 0},
    {17, -1},   {17, -2},   {17, -3},   {17, -4},   {17, -5},   {17, -6},
    {17, -7},   {17, -8},   {17, -9},   {17, -10},  {17, -11},  {17, -12},
    {17, -13},  {17, -14},  {17, -15},  {17, -16},  {17, -17},  {16, -17},
    {15, -17},  {14, -17},  {13, -17},  {12, -17},  {11, -17},  {10, -17},
    {9, -17},   {8, -17},   {7, -17},   {6, -17},   {5, -17},   {4, -17},
    {3, -17},   {2, -17},   {1, -17},   {0, -17},   {-1, -17},  {-2, -17},
    {-3, -17},  {-4, -17},  {-5, -17},  {-6, -17},  {-7, -17},  {-8, -17},
    {-9, -17},  {-10, -17}, {-11, -17}, {-12, -17}, {-13, -17}, {-14, -17},
    {-15, -17}, {-16, -17}, {-17, -17}, {-17, -16}, {-17, -15}, {-17, -14},
    {-17, -13}, {-17, -12}, {-17, -11}, {-17, -10}, {-17, -9},  {-17, -8},
    {-17, -7},  {-17, -6},  {-17, -5},  {-17, -4},  {-17, -3},  {-17, -2},
    {-17, -1},  {-17, 0},   {-17, 1},   {-17, 2},   {-17, 3},   {-17, 4},
    {-17, 5},   {-17, 6},   {-17, 7},   {-17, 8},   {-17, 9},   {-17, 10},
    {-17, 11},  {-17, 12},  {-17, 13},  {-17, 14},  {-17, 15},  {-17, 16},
    {-17, 17},  {-17, 18},  {-16, 18},  {-15, 18},  {-14, 18},  {-13, 18},
    {-12, 18},  {-11, 18},  {-10, 18},  {-9, 18},   {-8, 18},   {-7, 18},
    {-6, 18},   {-5, 18},   {-4, 18},   {-3, 18},   {-2, 18},   {-1, 18},
    {0, 18},    {1, 18},    {2, 18},    {3, 18},    {4, 18},    {5, 18},
    {6, 18},    {7, 18},    {8, 18},    {9, 18},    {10, 18},   {11, 18},
    {12, 18},   {13, 18},   {14, 18},   {15, 18},   {16, 18},   {17, 18},
    {18, 18},   {18, 17},   {18, 16},   {18, 15},   {18, 14},   {18, 13},
    {18, 12},   {18, 11},   {18, 10},   {18, 9},    {18, 8},    {18, 7},
    {18, 6},    {18, 5},    {18, 4},    {18, 3},    {18, 2},    {18, 1},
    {18, 0},    {18, -1},   {18, -2},   {18, -3},   {18, -4},   {18, -5},
    {18, -6},   {18, -7},   {18, -8},   {18, -9},   {18, -10},  {18, -11},
    {18, -12},  {18, -13},  {18, -14},  {18, -15},  {18, -16},  {18, -17},
    {18, -18},  {17, -18},  {16, -18},  {15, -18},  {14, -18},  {13, -18},
    {12, -18},  {11, -18},  {10, -18},  {9, -18},   {8, -18},   {7, -18},
    {6, -18},   {5, -18},   {4, -18},   {3, -18},   {2, -18},   {1, -18},
    {0, -18},   {-1, -18},  {-2, -18},  {-3, -18},  {-4, -18},  {-5, -18},
    {-6, -18},  {-7, -18},  {-8, -18},  {-9, -18},  {-10, -18}, {-11, -18},
    {-12, -18}, {-13, -18}, {-14, -18}, {-15, -18}, {-16, -18}, {-17, -18},
    {-18, -18}, {-18, -17}, {-18, -16}, {-18, -15}, {-18, -14}, {-18, -13},
    {-18, -12}, {-18, -11}, {-18, -10}, {-18, -9},  {-18, -8},  {-18, -7},
    {-18, -6},  {-18, -5},  {-18, -4},  {-18, -3},  {-18, -2},  {-18, -1},
    {-18, 0},   {-18, 1},   {-18, 2},   {-18, 3},   {-18, 4},   {-18, 5},
    {-18, 6},   {-18, 7},   {-18, 8},   {-18, 9},   {-18, 10},  {-18, 11},
    {-18, 12},  {-18, 13},  {-18, 14},  {-18, 15},  {-18, 16},  {-18, 17},
    {-18, 18},  {-18, 19},  {-17, 19},  {-16, 19},  {-15, 19},  {-14, 19},
    {-13, 19},  {-12, 19},  {-11, 19},  {-10, 19},  {-9, 19},   {-8, 19},
    {-7, 19},   {-6, 19},   {-5, 19},   {-4, 19},   {-3, 19},   {-2, 19},
    {-1, 19},   {0, 19},    {1, 19},    {2, 19},    {3, 19},    {4, 19},
    {5, 19},    {6, 19},    {7, 19},    {8, 19},    {9, 19},    {10, 19},
    {11, 19},   {12, 19},   {13, 19},   {14, 19},   {15, 19},   {16, 19},
    {17, 19},   {18, 19},   {19, 19},   {19, 18},   {19, 17},   {19, 16},
    {19, 15},   {19, 14},   {19, 13},   {19, 12},   {19, 11},   {19, 10},
    {19, 9},    {19, 8},    {19, 7},    {19, 6},    {19, 5},    {19, 4},
    {19, 3},    {19, 2},    {19, 1},    {19, 0},    {19, -1},   {19, -2},
    {19, -3},   {19, -4},   {19, -5},   {19, -6},   {19, -7},   {19, -8},
    {19, -9},   {19, -10},  {19, -11},  {19, -12},  {19, -13},  {19, -14},
    {19, -15},  {19, -16},  {19, -17},  {19, -18},  {19, -19},  {18, -19},
    {17, -19},  {16, -19},  {15, -19},  {14, -19},  {13, -19},  {12, -19},
    {11, -19},  {10, -19},  {9, -19},   {8, -19},   {7, -19},   {6, -19},
    {5, -19},   {4, -19},   {3, -19},   {2, -19},   {1, -19},   {0, -19},
    {-1, -19},  {-2, -19},  {-3, -19},  {-4, -19},  {-5, -19},  {-6, -19},
    {-7, -19},  {-8, -19},  {-9, -19},  {-10, -19}, {-11, -19}, {-12, -19},
    {-13, -19}, {-14, -19}, {-15, -19}, {-16, -19}, {-17, -19}, {-18, -19},
    {-19, -19}, {-19, -18}, {-19, -17}, {-19, -16}, {-19, -15}, {-19, -14},
    {-19, -13}, {-19, -12}, {-19, -11}, {-19, -10}, {-19, -9},  {-19, -8},
    {-19, -7},  {-19, -6},  {-19, -5},  {-19, -4},  {-19, -3},  {-19, -2},
    {-19, -1},  {-19, 0},   {-19, 1},   {-19, 2},   {-19, 3},   {-19, 4},
    {-19, 5},   {-19, 6},   {-19, 7},   {-19, 8},   {-19, 9},   {-19, 10},
    {-19, 11},  {-19, 12},  {-19, 13},  {-19, 14},  {-19, 15},  {-19, 16},
    {-19, 17},  {-19, 18},  {-19, 19},  {-19, 20},  {-18, 20},  {-17, 20},
    {-16, 20},  {-15, 20},  {-14, 20},  {-13, 20},  {-12, 20},  {-11, 20},
    {-10, 20},  {-9, 20},   {-8, 20},   {-7, 20},   {-6, 20},   {-5, 20},
    {-4, 20},   {-3, 20},   {-2, 20},   {-1, 20},   {0, 20},    {1, 20},
    {2, 20},    {3, 20},    {4, 20},    {5, 20},    {6, 20},    {7, 20},
    {8, 20},    {9, 20},    {10, 20},   {11, 20},   {12, 20},   {13, 20},
    {14, 20},   {15, 20},   {16, 20},   {17, 20},   {18, 20},   {19, 20},
    {20, 20},   {20, 19},   {20, 18},   {20, 17},   {20, 16},   {20, 15},
    {20, 14},   {20, 13},   {20, 12},   {20, 11},   {20, 10},   {20, 9},
    {20, 8},    {20, 7},    {20, 6},    {20, 5},    {20, 4},    {20, 3},
    {20, 2},    {20, 1},    {20, 0},    {20, -1},   {20, -2},   {20, -3},
    {20, -4},   {20, -5},   {20, -6},   {20, -7},   {20, -8},   {20, -9},
    {20, -10},  {20, -11},  {20, -12},  {20, -13},  {20, -14},  {20, -15},
    {20, -16},  {20, -17},  {20, -18},  {20, -19},  {20, -20},  {19, -20},
    {18, -20},  {17, -20},  {16, -20},  {15, -20},  {14, -20},  {13, -20},
    {12, -20},  {11, -20},  {10, -20},  {9, -20},   {8, -20},   {7, -20},
    {6, -20},   {5, -20},   {4, -20},   {3, -20},   {2, -20},   {1, -20},
    {0, -20},   {-1, -20},  {-2, -20},  {-3, -20},  {-4, -20},  {-5, -20},
    {-6, -20},  {-7, -20},  {-8, -20},  {-9, -20},  {-10, -20}, {-11, -20},
    {-12, -20}, {-13, -20}, {-14, -20}, {-15, -20}, {-16, -20}, {-17, -20},
    {-18, -20}, {-19, -20}, {-20, -20}, {-20, -19}, {-20, -18}, {-20, -17},
    {-20, -16}, {-20, -15}, {-20, -14}, {-20, -13}, {-20, -12}, {-20, -11},
    {-20, -10}, {-20, -9},  {-20, -8},  {-20, -7},  {-20, -6},  {-20, -5},
    {-20, -4},  {-20, -3},  {-20, -2},  {-20, -1},  {-20, 0},   {-20, 1},
    {-20, 2},   {-20, 3},   {-20, 4},   {-20, 5},   {-20, 6},   {-20, 7},
    {-20, 8},   {-20, 9},   {-20, 10},  {-20, 11},  {-20, 12},  {-20, 13},
    {-20, 14},  {-20, 15},  {-20, 16},  {-20, 17},  {-20, 18},  {-20, 19},
    {-20, 20},  {-20, 21},  {-19, 21},  {-18, 21},  {-17, 21},  {-16, 21},
    {-15, 21},  {-14, 21},  {-13, 21},  {-12, 21},  {-11, 21},  {-10, 21},
    {-9, 21},   {-8, 21},   {-7, 21},   {-6, 21},   {-5, 21},   {-4, 21},
    {-3, 21},   {-2, 21},   {-1, 21},   {0, 21},    {1, 21},    {2, 21},
    {3, 21},    {4, 21},    {5, 21},    {6, 21},    {7, 21},    {8, 21},
    {9, 21},    {10, 21},   {11, 21},   {12, 21},   {13, 21},   {14, 21},
    {15, 21},   {16, 21},   {17, 21},   {18, 21},   {19, 21},   {20, 21},
    {21, 21},   {21, 20},   {21, 19},   {21, 18},   {21, 17},   {21, 16},
    {21, 15},   {21, 14},   {21, 13},   {21, 12},   {21, 11},   {21, 10},
    {21, 9},    {21, 8},    {21, 7},    {21, 6},    {21, 5},    {21, 4},
    {21, 3},    {21, 2},    {21, 1},    {21, 0},    {21, -1},   {21, -2},
    {21, -3},   {21, -4},   {21, -5},   {21, -6},   {21, -7},   {21, -8},
    {21, -9},   {21, -10},  {21, -11},  {21, -12},  {21, -13},  {21, -14},
    {21, -15},  {21, -16},  {21, -17},  {21, -18},  {21, -19},  {21, -20},
    {21, -21},  {20, -21},  {19, -21},  {18, -21},  {17, -21},  {16, -21},
    {15, -21},  {14, -21},  {13, -21},  {12, -21},  {11, -21},  {10, -21},
    {9, -21},   {8, -21},   {7, -21},   {6, -21},   {5, -21},   {4, -21},
    {3, -21},   {2, -21},   {1, -21},   {0, -21},   {-1, -21},  {-2, -21},
    {-3, -21},  {-4, -21},  {-5, -21},  {-6, -21},  {-7, -21},  {-8, -21},
    {-9, -21},  {-10, -21}, {-11, -21}, {-12, -21}, {-13, -21}, {-14, -21},
    {-15, -21}, {-16, -21}, {-17, -21}, {-18, -21}, {-19, -21}, {-20, -21},
    {-21, -21}, {-21, -20}, {-21, -19}, {-21, -18}, {-21, -17}, {-21, -16},
    {-21, -15}, {-21, -14}, {-21, -13}, {-21, -12}, {-21, -11}, {-21, -10},
    {-21, -9},  {-21, -8},  {-21, -7},  {-21, -6},  {-21, -5},  {-21, -4},
    {-21, -3},  {-21, -2},  {-21, -1},  {-21, 0},   {-21, 1},   {-21, 2},
    {-21, 3},   {-21, 4},   {-21, 5},   {-21, 6},   {-21, 7},   {-21, 8},
    {-21, 9},   {-21, 10},  {-21, 11},  {-21, 12},  {-21, 13},  {-21, 14},
    {-21, 15},  {-21, 16},  {-21, 17},  {-21, 18},  {-21, 19},  {-21, 20},
    {-21, 21},  {-21, 22},  {-20, 22},  {-19, 22},  {-18, 22},  {-17, 22},
    {-16, 22},  {-15, 22},  {-14, 22},  {-13, 22},  {-12, 22},  {-11, 22},
    {-10, 22},  {-9, 22},   {-8, 22},   {-7, 22},   {-6, 22},   {-5, 22},
    {-4, 22},   {-3, 22},   {-2, 22},   {-1, 22},   {0, 22},    {1, 22},
    {2, 22},    {3, 22},    {4, 22},    {5, 22},    {6, 22},    {7, 22},
    {8, 22},    {9, 22},    {10, 22},   {11, 22},   {12, 22},   {13, 22},
    {14, 22},   {15, 22},   {16, 22},   {17, 22},   {18, 22},   {19, 22},
    {20, 22},   {21, 22},   {22, 22},   {22, 21},   {22, 20},   {22, 19},
    {22, 18},   {22, 17},   {22, 16},   {22, 15},   {22, 14},   {22, 13},
    {22, 12},   {22, 11},   {22, 10},   {22, 9},    {22, 8},    {22, 7},
    {22, 6},    {22, 5},    {22, 4},    {22, 3},    {22, 2},    {22, 1},
    {22, 0},    {22, -1},   {22, -2},   {22, -3},   {22, -4},   {22, -5},
    {22, -6},   {22, -7},   {22, -8},   {22, -9},   {22, -10},  {22, -11},
    {22, -12},  {22, -13},  {22, -14},  {22, -15},  {22, -16},  {22, -17},
    {22, -18},  {22, -19},  {22, -20},  {22, -21},  {22, -22},  {21, -22},
    {20, -22},  {19, -22},  {18, -22},  {17, -22},  {16, -22},  {15, -22},
    {14, -22},  {13, -22},  {12, -22},  {11, -22},  {10, -22},  {9, -22},
    {8, -22},   {7, -22},   {6, -22},   {5, -22},   {4, -22},   {3, -22},
    {2, -22},   {1, -22},   {0, -22},   {-1, -22},  {-2, -22},  {-3, -22},
    {-4, -22},  {-5, -22},  {-6, -22},  {-7, -22},  {-8, -22},  {-9, -22},
    {-10, -22}, {-11, -22}, {-12, -22}, {-13, -22}, {-14, -22}, {-15, -22},
    {-16, -22}, {-17, -22}, {-18, -22}, {-19, -22}, {-20, -22}, {-21, -22},
    {-22, -22}, {-22, -21}, {-22, -20}, {-22, -19}, {-22, -18}, {-22, -17},
    {-22, -16}, {-22, -15}, {-22, -14}, {-22, -13}, {-22, -12}, {-22, -11},
    {-22, -10}, {-22, -9},  {-22, -8},  {-22, -7},  {-22, -6},  {-22, -5},
    {-22, -4},  {-22, -3},  {-22, -2},  {-22, -1},  {-22, 0},   {-22, 1},
    {-22, 2},   {-22, 3},   {-22, 4},   {-22, 5},   {-22, 6},   {-22, 7},
    {-22, 8},   {-22, 9},   {-22, 10},  {-22, 11},  {-22, 12},  {-22, 13},
    {-22, 14},  {-22, 15},  {-22, 16},  {-22, 17},  {-22, 18},  {-22, 19},
    {-22, 20},  {-22, 21},  {-22, 22},  {-22, 23},  {-21, 23},  {-20, 23},
    {-19, 23},  {-18, 23},  {-17, 23},  {-16, 23},  {-15, 23},  {-14, 23},
    {-13, 23},  {-12, 23},  {-11, 23},  {-10, 23},  {-9, 23},   {-8, 23},
    {-7, 23},   {-6, 23},   {-5, 23},   {-4, 23},   {-3, 23},   {-2, 23},
    {-1, 23},   {0, 23},    {1, 23},    {2, 23},    {3, 23},    {4, 23},
    {5, 23},    {6, 23},    {7, 23},    {8, 23},    {9, 23},    {10, 23},
    {11, 23},   {12, 23},   {13, 23},   {14, 23},   {15, 23},   {16, 23},
    {17, 23},   {18, 23},   {19, 23},   {20, 23},   {21, 23},   {22, 23},
    {23, 23},   {23, 22},   {23, 21},   {23, 20},   {23, 19},   {23, 18},
    {23, 17},   {23, 16},   {23, 15},   {23, 14},   {23, 13},   {23, 12},
    {23, 11},   {23, 10},   {23, 9},    {23, 8},    {23, 7},    {23, 6},
    {23, 5},    {23, 4},    {23, 3},    {23, 2},    {23, 1},    {23, 0},
    {23, -1},   {23, -2},   {23, -3},   {23, -4},   {23, -5},   {23, -6},
    {23, -7},   {23, -8},   {23, -9},   {23, -10},  {23, -11},  {23, -12},
    {23, -13},  {23, -14},  {23, -15},  {23, -16},  {23, -17},  {23, -18},
    {23, -19},  {23, -20},  {23, -21},  {23, -22},  {23, -23},  {22, -23},
    {21, -23},  {20, -23},  {19, -23},  {18, -23},  {17, -23},  {16, -23},
    {15, -23},  {14, -23},  {13, -23},  {12, -23},  {11, -23},  {10, -23},
    {9, -23},   {8, -23},   {7, -23},   {6, -23},   {5, -23},   {4, -23},
    {3, -23},   {2, -23},   {1, -23},   {0, -23},   {-1, -23},  {-2, -23},
    {-3, -23},  {-4, -23},  {-5, -23},  {-6, -23},  {-7, -23},  {-8, -23},
    {-9, -23},  {-10, -23}, {-11, -23}, {-12, -23}, {-13, -23}, {-14, -23},
    {-15, -23}, {-16, -23}, {-17, -23}, {-18, -23}, {-19, -23}, {-20, -23},
    {-21, -23}, {-22, -23}, {-23, -23}, {-23, -22}, {-23, -21}, {-23, -20},
    {-23, -19}, {-23, -18}, {-23, -17}, {-23, -16}, {-23, -15}, {-23, -14},
    {-23, -13}, {-23, -12}, {-23, -11}, {-23, -10}, {-23, -9},  {-23, -8},
    {-23, -7},  {-23, -6},  {-23, -5},  {-23, -4},  {-23, -3},  {-23, -2},
    {-23, -1},  {-23, 0},   {-23, 1},   {-23, 2},   {-23, 3},   {-23, 4},
    {-23, 5},   {-23, 6},   {-23, 7},   {-23, 8},   {-23, 9},   {-23, 10},
    {-23, 11},  {-23, 12},  {-23, 13},  {-23, 14},  {-23, 15},  {-23, 16},
    {-23, 17},  {-23, 18},  {-23, 19},  {-23, 20},  {-23, 21},  {-23, 22},
    {-23, 23},  {-23, 24},  {-22, 24},  {-21, 24},  {-20, 24},  {-19, 24},
    {-18, 24},  {-17, 24},  {-16, 24},  {-15, 24},  {-14, 24},  {-13, 24},
    {-12, 24},  {-11, 24},  {-10, 24},  {-9, 24},   {-8, 24},   {-7, 24},
    {-6, 24},   {-5, 24},   {-4, 24},   {-3, 24},   {-2, 24},   {-1, 24},
    {0, 24},    {1, 24},    {2, 24},    {3, 24},    {4, 24},    {5, 24},
    {6, 24},    {7, 24},    {8, 24},    {9, 24},    {10, 24},   {11, 24},
    {12, 24},   {13, 24},   {14, 24},   {15, 24},   {16, 24},   {17, 24},
    {18, 24},   {19, 24},   {20, 24},   {21, 24},   {22, 24},   {23, 24},
    {24, 24},   {24, 23},   {24, 22},   {24, 21},   {24, 20},   {24, 19},
    {24, 18},   {24, 17},   {24, 16},   {24, 15},   {24, 14},   {24, 13},
    {24, 12},   {24, 11},   {24, 10},   {24, 9},    {24, 8},    {24, 7},
    {24, 6},    {24, 5},    {24, 4},    {24, 3},    {24, 2},    {24, 1},
    {24, 0},    {24, -1},   {24, -2},   {24, -3},   {24, -4},   {24, -5},
    {24, -6},   {24, -7},   {24, -8},   {24, -9},   {24, -10},  {24, -11},
    {24, -12},  {24, -13},  {24, -14},  {24, -15},  {24, -16},  {24, -17},
    {24, -18},  {24, -19},  {24, -20},  {24, -21},  {24, -22},  {24, -23},
    {24, -24},  {23, -24},  {22, -24},  {21, -24},  {20, -24},  {19, -24},
    {18, -24},  {17, -24},  {16, -24},  {15, -24},  {14, -24},  {13, -24},
    {12, -24},  {11, -24},  {10, -24},  {9, -24},   {8, -24},   {7, -24},
    {6, -24},   {5, -24},   {4, -24},   {3, -24},   {2, -24},   {1, -24},
    {0, -24},   {-1, -24},  {-2, -24},  {-3, -24},  {-4, -24},  {-5, -24},
    {-6, -24},  {-7, -24},  {-8, -24},  {-9, -24},  {-10, -24}, {-11, -24},
    {-12, -24}, {-13, -24}, {-14, -24}, {-15, -24}, {-16, -24}, {-17, -24},
    {-18, -24}, {-19, -24}, {-20, -24}, {-21, -24}, {-22, -24}, {-23, -24},
    {-24, -24}, {-24, -23}, {-24, -22}, {-24, -21}, {-24, -20}, {-24, -19},
    {-24, -18}, {-24, -17}, {-24, -16}, {-24, -15}, {-24, -14}, {-24, -13},
    {-24, -12}, {-24, -11}, {-24, -10}, {-24, -9},  {-24, -8},  {-24, -7},
    {-24, -6},  {-24, -5},  {-24, -4},  {-24, -3},  {-24, -2},  {-24, -1},
    {-24, 0},   {-24, 1},   {-24, 2},   {-24, 3},   {-24, 4},   {-24, 5},
    {-24, 6},   {-24, 7},   {-24, 8},   {-24, 9},   {-24, 10},  {-24, 11},
    {-24, 12},  {-24, 13},  {-24, 14},  {-24, 15},  {-24, 16},  {-24, 17},
    {-24, 18},  {-24, 19},  {-24, 20},  {-24, 21},  {-24, 22},  {-24, 23},
    {-24, 24},  {-24, 25},  {-23, 25},  {-22, 25},  {-21, 25},  {-20, 25},
    {-19, 25},  {-18, 25},  {-17, 25},  {-16, 25},  {-15, 25},  {-14, 25},
    {-13, 25},  {-12, 25},  {-11, 25},  {-10, 25},  {-9, 25},   {-8, 25},
    {-7, 25},   {-6, 25},   {-5, 25},   {-4, 25},   {-3, 25},   {-2, 25},
    {-1, 25},   {0, 25},    {1, 25},    {2, 25},    {3, 25},    {4, 25},
    {5, 25},    {6, 25},    {7, 25},    {8, 25},    {9, 25},    {10, 25},
    {11, 25},   {12, 25},   {13, 25},   {14, 25},   {15, 25},   {16, 25},
    {17, 25},   {18, 25},   {19, 25},   {20, 25},   {21, 25},   {22, 25},
    {23, 25},   {24, 25},   {25, 25},   {25, 24},   {25, 23},   {25, 22},
    {25, 21},   {25, 20},   {25, 19},   {25, 18},   {25, 17},   {25, 16},
    {25, 15},   {25, 14},   {25, 13},   {25, 12},   {25, 11},   {25, 10},
    {25, 9},    {25, 8},    {25, 7},    {25, 6},    {25, 5},    {25, 4},
    {25, 3},    {25, 2},    {25, 1},    {25, 0},    {25, -1},   {25, -2},
    {25, -3},   {25, -4},   {25, -5},   {25, -6},   {25, -7},   {25, -8},
    {25, -9},   {25, -10},  {25, -11},  {25, -12},  {25, -13},  {25, -14},
    {25, -15},  {25, -16},  {25, -17},  {25, -18},  {25, -19},  {25, -20},
    {25, -21},  {25, -22},  {25, -23},  {25, -24},  {25, -25},  {24, -25},
    {23, -25},  {22, -25},  {21, -25},  {20, -25},  {19, -25},  {18, -25},
    {17, -25},  {16, -25},  {15, -25},  {14, -25},  {13, -25},  {12, -25},
    {11, -25},  {10, -25},  {9, -25},   {8, -25},   {7, -25},   {6, -25},
    {5, -25},   {4, -25},   {3, -25},   {2, -25},   {1, -25},   {0, -25},
    {-1, -25},  {-2, -25},  {-3, -25},  {-4, -25},  {-5, -25},  {-6, -25},
    {-7, -25},  {-8, -25},  {-9, -25},  {-10, -25}, {-11, -25}, {-12, -25},
    {-13, -25}, {-14, -25}, {-15, -25}, {-16, -25}, {-17, -25}, {-18, -25},
    {-19, -25}, {-20, -25}, {-21, -25}, {-22, -25}, {-23, -25}, {-24, -25},
    {-25, -25},
};

struct HazardBounds {
  Point down_left[2];
  Point up_left[2];
  Point down_right[2];
  Point up_right[2];
  signed char down_left_count = 0;
  signed char up_left_count = 0;
  signed char down_right_count = 0;
  signed char up_right_count = 0;

  bool HasValues() const {
    return down_left_count != 0 && up_left_count != 0 &&
           down_right_count != 0 && up_right_count != 0;
  }
};

void print(std::ostream& s, const Point* const points, signed char count) {
  s << "{";
  if (count >= 1) {
    s << points[0];
  }
  if (count >= 2) {
    s << "," << points[1];
  }
  s << "}";
}

std::ostream& operator<<(std::ostream& s, const HazardBounds& b) {
  s << "[DL=";
  print(s, b.down_left, b.down_left_count);
  s << ",UL=";
  print(s, b.up_left, b.up_left_count);
  s << ",DR=";
  print(s, b.down_right, b.down_right_count);
  s << ",UR=";
  print(s, b.up_right, b.up_right_count);
  s << "]";
  return s;
}

int dist_dl(const Point& a) { return a.x + a.y; };
int dist_ul(const Point& a) { return a.x - a.y; };
int dist_dr(const Point& a) { return -a.x + a.y; };
int dist_ur(const Point& a) { return -a.x - a.y; };

template <class T>
HazardBounds findHazardBounds(const T& hazards, int max_count = -1) {
  HazardBounds result;

  int count = 0;
  for (const Point& p : hazards) {
    if (max_count >= 0 && count >= max_count) {
      break;
    }
    count++;

    if (result.down_left_count == 0) {
      result.down_left[0] = p;
      result.down_left_count = 1;
    } else {
      int de = dist_dl(result.down_left[0]);
      int dn = dist_dl(p);
      if (result.down_left_count == 1 && de == dn) {
        result.down_left[1] = p;
        result.down_left_count = 2;
      }
      if (de > dn) {
        result.down_left[0] = p;
        result.down_left_count = 1;
      }
    }

    if (result.up_left_count == 0) {
      result.up_left[0] = p;
      result.up_left_count = 1;
    } else {
      int de = dist_ul(result.up_left[0]);
      int dn = dist_ul(p);
      if (result.up_left_count == 1 && de == dn) {
        result.up_left[1] = p;
        result.up_left_count = 2;
      }
      if (de > dn) {
        result.up_left[0] = p;
        result.up_left_count = 1;
      }
    }

    if (result.down_right_count == 0) {
      result.down_right[0] = p;
      result.down_right_count = 1;
    } else {
      int de = dist_dr(result.down_right[0]);
      int dn = dist_dr(p);
      if (result.down_right_count == 1 && de == dn) {
        result.down_right[1] = p;
        result.down_right_count = 2;
      }
      if (de > dn) {
        result.down_right[0] = p;
        result.down_right_count = 1;
      }
    }

    if (result.up_right_count == 0) {
      result.up_right[0] = p;
      result.up_right_count = 1;
    } else {
      int de = dist_ur(result.up_right[0]);
      int dn = dist_ur(p);
      if (result.up_right_count == 1 && de == dn) {
        result.up_right[1] = p;
        result.up_right_count = 2;
      }
      if (de > dn) {
        result.up_right[0] = p;
        result.up_right_count = 1;
      }
    }
  }

  if (result.down_left_count == 2) {
    if (result.down_left[0].x > result.down_left[1].x) {
      std::swap(result.down_left[0], result.down_left[1]);
    }
  }
  if (result.up_left_count == 2) {
    if (result.up_left[0].x > result.up_left[1].x) {
      std::swap(result.up_left[0], result.up_left[1]);
    }
  }
  if (result.down_right_count == 2) {
    if (result.down_right[0].x > result.down_right[1].x) {
      std::swap(result.down_right[0], result.down_right[1]);
    }
  }
  if (result.up_right_count == 2) {
    if (result.up_right[0].x > result.up_right[1].x) {
      std::swap(result.up_right[0], result.up_right[1]);
    }
  }

  return result;
}

Point calcDiff(const HazardBounds& state_bounds,
               const HazardBounds& expected_bounds, Coordinate width,
               Coordinate height) {
  // If there are two of any of corners, they define the exact position.
  if (state_bounds.down_left_count == 2) {
    return Point{static_cast<Coordinate>(state_bounds.down_left[0].x -
                                         expected_bounds.down_left[0].x),
                 static_cast<Coordinate>(state_bounds.down_left[0].y -
                                         expected_bounds.down_left[0].y)};
  }
  if (state_bounds.up_left_count == 2) {
    return Point{static_cast<Coordinate>(state_bounds.up_left[0].x -
                                         expected_bounds.up_left[0].x),
                 static_cast<Coordinate>(state_bounds.up_left[0].y -
                                         expected_bounds.up_left[0].y)};
  }
  if (state_bounds.down_right_count == 2) {
    return Point{static_cast<Coordinate>(state_bounds.down_right[0].x -
                                         expected_bounds.down_right[0].x),
                 static_cast<Coordinate>(state_bounds.down_right[0].y -
                                         expected_bounds.down_right[0].y)};
  }
  if (state_bounds.up_right_count == 2) {
    return Point{static_cast<Coordinate>(state_bounds.up_right[0].x -
                                         expected_bounds.up_right[0].x),
                 static_cast<Coordinate>(state_bounds.up_right[0].y -
                                         expected_bounds.up_right[0].y)};
  }

  // If a corner doesn't touch any borders, it defines position.
  if (state_bounds.down_left[0].x != 0 && state_bounds.down_left[0].y != 0) {
    return Point{static_cast<Coordinate>(state_bounds.down_left[0].x -
                                         expected_bounds.down_left[0].x),
                 static_cast<Coordinate>(state_bounds.down_left[0].y -
                                         expected_bounds.down_left[0].y)};
  }
  if (state_bounds.up_left[0].x != 0 &&
      state_bounds.up_left[0].y != height - 1) {
    return Point{static_cast<Coordinate>(state_bounds.up_left[0].x -
                                         expected_bounds.up_left[0].x),
                 static_cast<Coordinate>(state_bounds.up_left[0].y -
                                         expected_bounds.up_left[0].y)};
  }
  if (state_bounds.down_right[0].x != width - 1 &&
      state_bounds.down_right[0].y != 0) {
    return Point{static_cast<Coordinate>(state_bounds.down_right[0].x -
                                         expected_bounds.down_right[0].x),
                 static_cast<Coordinate>(state_bounds.down_right[0].y -
                                         expected_bounds.down_right[0].y)};
  }
  if (state_bounds.up_right[0].x != width - 1 &&
      state_bounds.up_right[0].y != height - 1) {
    return Point{static_cast<Coordinate>(state_bounds.up_right[0].x -
                                         expected_bounds.up_right[0].x),
                 static_cast<Coordinate>(state_bounds.up_right[0].y -
                                         expected_bounds.up_right[0].y)};
  }

  // It's hard to say otherwise. Most of the board must be covered with hazard,
  // place center in the middle.
  return Point{static_cast<Coordinate>(width / 2),
               static_cast<Coordinate>(height / 2)};
}

}  // namespace

WrappedRuleset::RoyaleConfig WrappedRuleset::fixRoyaleConfig(
    const RoyaleConfig& royale_config) {
  RoyaleConfig result = royale_config;

  // Do not shrink at all.
  result.shrink_every_n_turns = 1000000;

  return result;
}

void WrappedRuleset::CreateNextBoardState(const BoardState& prev_state,
                                          const SnakeMovesVector& moves,
                                          int turn, BoardState& next_state) {
  // Same as Royale, but don't calculate hazard bounds and don't even attempt to
  // shrink them by Royale rules.
  StandardRuleset::CreateNextBoardState(prev_state, moves, turn, next_state);
  damageInHazard(next_state);

  // Apply own rules of updating hazards.
  updateWrappedHazard(next_state, turn);
}

void WrappedRuleset::updateWrappedHazard(BoardState& next_state, int turn) {
  if (turn % 3 != 2) {
    // Hazard is updated every third turn starting turn 2.
    return;
  }

  int hazard_number = (turn + 1) / 3;
  if (hazard_number == 1) {
    // Don't attempt to match hazard on step 2 - there should be nothing to
    // match with yet.
    // TODO: Place the first hazard in random position.
    return;
  }

  HazardBounds state_hazard_bounds = findHazardBounds(next_state.Hazard());
  if (!state_hazard_bounds.HasValues()) {
    // There seem to be no hazards on the field, can't determine hazard base.
    return;
  }

  // Don't take the last expected hazard into account. It is not added to the
  // board yet, so it's not expected.
  HazardBounds expected_hazard_bounds =
      findHazardBounds(kHazardList, hazard_number - 1);

  Point diff = calcDiff(state_hazard_bounds, expected_hazard_bounds,
                        next_state.width, next_state.height);
  Point hazard_pos = kHazardList[hazard_number - 1];
  Point new_hazard{static_cast<Coordinate>(hazard_pos.x + diff.x),
                   static_cast<Coordinate>(hazard_pos.y + diff.y)};

  if (new_hazard.x < 0 || new_hazard.y < 0 ||
      new_hazard.x >= next_state.width || new_hazard.y >= next_state.height) {
    // New hazard is out of bounds. Don't set it.
    return;
  }

  next_state.Hazard().Set(new_hazard, true);
}

}  // namespace rules
}  // namespace battlesnake
